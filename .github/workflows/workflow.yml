name: 'AWS Testing'

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write  # This applies globally, but ensure it's job-specific too

jobs:
  read-dev:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Ensure OIDC token access inside the job

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::631973159338:role/sts-lab-2-target
          role-session-name: OIDCSession

      - name: List IAM Roles
        run: aws iam list-roles
        shell: bash

      - name: List Secrets in AWS Secrets Manager
        run: aws secretsmanager list-secrets
        shell: bash

      - name: Get Caller Identity
        run: aws sts get-caller-identity
        shell: bash

      - name: Get Policy ARN
        run: |
          POLICY_ARN=$(aws iam list-attached-role-policies --role-name sts-lab-2-target | jq -r '.AttachedPolicies[0].PolicyArn')
          echo "Policy ARN: $POLICY_ARN"
          echo "POLICY_ARN=$POLICY_ARN" >> $GITHUB_ENV

      - name: Show Policy Details
        run: |
          aws iam get-policy --policy-arn "$POLICY_ARN"

      - name: Show Policy Details
        run: |
          aws iam get-policy-version --policy-arn "$POLICY_ARN" --version-id v1

      - name: Get Caller Identity
        run: aws secretsmanager get-secret-value --secret-id "flag_sts_lab_2"
        shell: bash          

      - name: Get Caller Identity
        run: aws secretsmanager get-secret-value --secret-id "flag_sts_lab_2-S3iWZT"
        shell: bash          

      - name: Get Caller Identity
        run: aws sts get-session-token
        shell: bash      
        

